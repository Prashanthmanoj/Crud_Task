@model Crud_Task.Context.Employee
@{
    ViewBag.Title = "Employee";
}

<style>
    .error {
        color: red;
    }
</style>

@using (Html.BeginForm("AddEmployee", "Employee", FormMethod.Post))
{
    <div class="container">
        <div class="form-group">
            @Html.HiddenFor(x => x.Id)
            <label>Name</label>
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Email</label>
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Mobile</label>
            @Html.ValidationMessageFor(x => x.Mobile, "", new { @class = "error" })
            @Html.TextBoxFor(x => x.Mobile, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Description</label>
            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @rows = "5" })
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Submit</button>
            <button type="button" class="btn btn-danger" onclick="clearForm()">Cancel</button>
        </div>
    </div>
}


<script>
    function clearForm() {
        $('input[type = "text"]').val('');
        $('textarea').val('');
    }
</script>

